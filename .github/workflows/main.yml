name: ObjC Metrics

on:
  pull_request_target:
    branches: [ '**' ]
    types: [opened, synchronize]
    
  workflow_dispatch:

jobs:
  collect:
    name: Collect - ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ref_alias: ["base", "pr"]
        include:
          - ref_alias: "base"
            ref: "${{ github.base_ref}}"
            name: "PR"
          - ref_alias: "pr"
            ref: "${{ github.ref }}"
            name: "Base"

    outputs:
      nsobject_count_base: ${{ steps.metrics.outputs.nsobject_count_base }}
      nsobject_count_pr: ${{ steps.metrics.outputs.nsobject_count_pr }}
      nsobjectcompat_count_base: ${{ steps.metrics.outputs.nsobjectcompat_count_base }}
      nsobjectcompat_count_pr: ${{ steps.metrics.outputs.nsobjectcompat_count_pr }}
      objc_count_base: ${{ steps.metrics.outputs.objc_count_base }}
      objc_count_pr: ${{ steps.metrics.outputs.objc_count_pr }}
      objcmembers_count_base: ${{ steps.metrics.outputs.objcmembers_count_base }}
      objcmembers_count_pr: ${{ steps.metrics.outputs.objcmembers_count_pr }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.ref }}

      - name: Collect
        id: metrics
        run: |
          source objc-metrics.sh --export none
          echo "nsobject_count_${{ matrix.ref_alias }}=$NSOBJECT_COUNT" >> "$GITHUB_OUTPUT"
          echo "nsobjectcompat_count_${{ matrix.ref_alias }}=$NSOBJECTCOMPAT_COUNT" >> "$GITHUB_OUTPUT"
          echo "objc_count_${{ matrix.ref_alias }}=$OBJC_COUNT" >> "$GITHUB_OUTPUT"
          echo "objcmembers_count_${{ matrix.ref_alias }}=$OBJCMEMBERS_COUNT" >> "$GITHUB_OUTPUT"
          
  report:
    name: Report
    runs-on: ubuntu-latest
    needs: [collect]

    permissions:
      pull-requests: write

    steps:
      - name: Calculate
        run: |
          echo "NSObject base: ${{ needs.collect.outputs.nsobject_count_base }}"
          echo "NSObject pr: ${{ needs.collect.outputs.nsobject_count_pr }}"
          echo "NSObjectCompat base: ${{ needs.collect.outputs.nsobjectcompat_count_base }}"
          echo "NSObjectCompat pr: ${{ needs.collect.outputs.nsobjectcompat_count_pr }}"
          echo "@objc base: ${{ needs.collect.outputs.objc_count_base }}"
          echo "@objc pr: ${{ needs.collect.outputs.objc_count_pr }}"
          echo "@objcMembers base: ${{ needs.collect.outputs.objcmembers_count_base }}"
          echo "@objcMembers pr: ${{ needs.collect.outputs.objcmembers_count_pr }}"

      - name: Post Comment
        uses: actions/github-script@v6
        with:
          script: |
            const comments = github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            })
            comments.then((value) => {
              const myComment = value.data.find((comment) => {
                return comment.user.login == "github-actions[bot]" && comment.user.type == "Bot" && comment.body.startsWith("ðŸ‘‹")
              })
              console.log(myComment)
              if (myComment === undefined) {
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: "ðŸ‘‹ Hello Comment!"
                })
              }
              else {
                github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: myComment.id,
                  body: "ðŸ‘‹ Hello Comment! " + Date.now()
                })
              }
            })
