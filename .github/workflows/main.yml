name: ObjC Metrics

on:
  pull_request:
    branches: [ '**' ]
    types: [opened, synchronize]
    
  workflow_dispatch:

jobs:
  pr-head:
    name: Collect Metrics - PR Head
    runs-on: ubuntu-latest

    outputs:
      nsobject_count: ${{ steps.metrics.outputs.nsobject_count }}
      nsobjectcompat_count: ${{ steps.metrics.outputs.nsobjectcompat_count }}
      objc_count: ${{ steps.metrics.outputs.objc_count }}
      objcmembers_count: ${{ steps.metrics.outputs.objcmembers_count }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      - name: Collect Metrics
        id: metrics
        run: |
          source objc-metrics.sh --export none
          echo "nsobject_count=$NSOBJECT_COUNT" >> "$GITHUB_OUTPUT"
          echo "nsobjectcompat_count=$NSOBJECTCOMPAT_COUNT" >> "$GITHUB_OUTPUT"
          echo "objc_count=$OBJC_COUNT" >> "$GITHUB_OUTPUT"
          echo "objcmembers_count=$OBJCMEMBERS_COUNT" >> "$GITHUB_OUTPUT"

  base-ref:
    name: Collect Metrics - Base
    runs-on: ubuntu-latest

    outputs:
      nsobject_count: ${{ steps.metrics.outputs.nsobject_count }}
      nsobjectcompat_count: ${{ steps.metrics.outputs.nsobjectcompat_count }}
      objc_count: ${{ steps.metrics.outputs.objc_count }}
      objcmembers_count: ${{ steps.metrics.outputs.objcmembers_count }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref}}
        
      - name: Collect Metrics
        id: metrics
        run: |
          source objc-metrics.sh --export none
          echo "nsobject_count=$NSOBJECT_COUNT" >> "$GITHUB_OUTPUT"
          echo "nsobjectcompat_count=$NSOBJECTCOMPAT_COUNT" >> "$GITHUB_OUTPUT"
          echo "objc_count=$OBJC_COUNT" >> "$GITHUB_OUTPUT"
          echo "objcmembers_count=$OBJCMEMBERS_COUNT" >> "$GITHUB_OUTPUT"

  collect:
    name: Collect Metrics - ${{ matrix.ref_alias }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ref_alias: ["base", "pr"]
        include:
          - ref_alias: "base"
            ref: "${{ github.base_ref}}"
          - ref_alias: "pr"
            ref: "${{ github.ref }}"

    outputs:
      nsobject_count_base: ${{ steps.metrics.outputs.nsobject_count_base }}
      nsobject_count_pr: ${{ steps.metrics.outputs.nsobject_count_pr }}
      nsobjectcompat_count_base: ${{ steps.metrics.outputs.nsobjectcompat_count_base }}
      nsobjectcompat_count_pr: ${{ steps.metrics.outputs.nsobjectcompat_count_pr }}
      objc_count_base: ${{ steps.metrics.outputs.objc_count_base }}
      objc_count_pr: ${{ steps.metrics.outputs.objc_count_pr }}
      objcmembers_count_base: ${{ steps.metrics.outputs.objcmembers_count_base }}
      objcmembers_count_pr: ${{ steps.metrics.outputs.objcmembers_count_pr }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.ref }}

      - name: Collect Metrics
        id: metrics
        run: |
          source objc-metrics.sh --export none
          echo "nsobject_count_${{ matrix.ref_alias }}=$NSOBJECT_COUNT" >> "$GITHUB_OUTPUT"
          echo "nsobjectcompat_count${{ matrix.ref_alias }}=$NSOBJECTCOMPAT_COUNT" >> "$GITHUB_OUTPUT"
          echo "objc_count${{ matrix.ref_alias }}=$OBJC_COUNT" >> "$GITHUB_OUTPUT"
          echo "objcmembers_count${{ matrix.ref_alias }}=$OBJCMEMBERS_COUNT" >> "$GITHUB_OUTPUT"
          
  report:
    name: Report Metrics
    runs-on: ubuntu-latest
    needs: [base-ref, pr-head, collect]

    steps:
      - name: Calculate
        run: |
          echo "Base:"
          echo "NSObject: ${{ needs.base-ref.outputs.nsobject_count }}"
          echo "NSObjectCompat: ${{ needs.base-ref.outputs.nsobjectcompat_count }}"
          echo "@objc: ${{ needs.base-ref.outputs.objc_count }}"
          echo "@objcMembers: ${{ needs.base-ref.outputs.objcmembers_count }}"
          echo
          echo "Pull Request:"
          echo "NSObject: ${{ needs.pr-head.outputs.nsobject_count }}"
          echo "NSObjectCompat: ${{ needs.pr-head.outputs.nsobjectcompat_count }}"
          echo "@objc: ${{ needs.pr-head.outputs.objc_count }}"
          echo "@objcMembers: ${{ needs.pr-head.outputs.objcmembers_count }}"
          echo
          echo "Collect:"
          echo "NSObject base: ${{ needs.collect.outputs.nsobject_count_base }}"
          echo "NSObject pr: ${{ needs.collect.outputs.nsobject_count_pr }}"
